name: Pull Request Validation

on:
  pull_request:
    branches: [main, develop]
  push:
    branches: [main, develop]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  php-lint:
    name: PHP Linting & Code Standards
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-version: ["8.1", "8.2"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, intl, gd, xml, zip, mysql
          tools: composer
          coverage: xdebug

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: /tmp/composer-cache
          key: ${{ runner.os }}-${{ hashFiles('**/composer.lock') }}

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Run PHP Syntax Check
        run: find . -name "*.php" -not -path "./vendor/*" -print0 | xargs -0 -n1 php -l

      - name: Run PHPCS (WordPress VIP Standards)
        run: composer run lint

      - name: Setup WordPress for testing
        run: |
          # Create wp-config.php for testing
          php scripts/wp-config-generator.php
          # Make wp-manager.sh executable
          chmod +x scripts/wp-manager.sh

      - name: Run PHPUnit Tests
        run: composer run test:coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml

  javascript-lint:
    name: JavaScript/CSS Linting & Testing
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: ["18", "20"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install npm dependencies
        run: |
          # Try npm ci first, fallback to npm install if lock file is out of sync
          npm ci || npm install

      - name: Run ESLint
        run: npm run lint:js

      - name: Run Stylelint
        run: npm run lint:css

      - name: Run Prettier check
        run: npm run format:check

      - name: Run JavaScript tests
        run: npm test

      - name: Build assets
        run: npm run build

  security-scan:
    name: Security Scanning
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.1"
          tools: composer

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress

      - name: Run PHP Security Checker
        run: composer audit

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install npm dependencies
        run: |
          # Try npm ci first, fallback to npm install if lock file is out of sync
          npm ci || npm install

      - name: Run npm audit
        run: npm audit --audit-level moderate

  markdown-lint:
    name: Documentation Linting
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install markdownlint-cli
        run: npm install -g markdownlint-cli

      - name: Run Markdown linting
        run: markdownlint "**/*.md" --ignore node_modules --ignore vendor --config .config/linting/.markdownlint.json

      - name: Validate YAML files
        uses: ibiqlik/action-yamllint@v3
        with:
          file_or_dir: .github/workflows/*.yml
          config_file: .yamllint.yml
