name: Pull Request Tests

on:
  pull_request:
    branches: [main, develop]
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write
  issues: write

env:
  PHP_VERSION: "8.1"
  NODE_VERSION: "18"

jobs:
  # Quick validation for pull requests
  pr-validation:
    name: PR Validation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, mysql

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: /tmp/composer-cache
          key: ${{ runner.os }}-composer-cache-v1-${{ hashFiles('**/composer.lock') }}

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install NPM dependencies
        run: |
          # Try npm ci first, fallback to npm install if lock file is out of sync
          npm ci || npm install

      - name: Run code quality checks
        run: |
          composer run lint:phpcs
          npm run lint:js
          npm run format:check

      - name: Run unit tests
        run: composer run test:unit

      - name: Validate project structure
        run: bash tests/test-project-setup.sh

      - name: Comment PR with results
        uses: actions/github-script@v6
        if: always()
        with:
          script: |
            const { owner, repo, number } = context.issue;
            const result = '${{ job.status }}' === 'success' ? '‚úÖ Passed' : '‚ùå Failed';

            await github.rest.issues.createComment({
              owner,
              repo,
              issue_number: number,
              body: `## üîç PR Validation Results

              **Status:** ${result}

              ### Tests Performed:
              - ‚úÖ Code quality (PHPCS, ESLint, Prettier)
              - ‚úÖ Unit tests (PHPUnit)
              - ‚úÖ Project structure validation

              [View full results](https://github.com/${owner}/${repo}/actions/runs/${{ github.run_id }})
              `
            });

  # Check for breaking changes
  breaking-changes:
    name: Breaking Changes Detection
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress

      - name: Check for breaking changes in composer.json
        run: |
          git diff HEAD~1 composer.json > composer-changes.diff
          if grep -q '"require"' composer-changes.diff; then
            echo "‚ö†Ô∏è Changes detected in composer requirements"
            echo "BREAKING_CHANGES=true" >> $GITHUB_ENV
          fi

      - name: Check for breaking changes in configuration
        run: |
          if git diff --name-only HEAD~1 | grep -E '\.(yml|yaml|json)$'; then
            echo "‚ö†Ô∏è Configuration file changes detected"
            echo "CONFIG_CHANGES=true" >> $GITHUB_ENV
          fi

      - name: Comment on breaking changes
        uses: actions/github-script@v6
        if: env.BREAKING_CHANGES == 'true' || env.CONFIG_CHANGES == 'true'
        with:
          script: |
            const { owner, repo, number } = context.issue;
            let message = '## ‚ö†Ô∏è Potential Breaking Changes Detected\n\n';

            if (process.env.BREAKING_CHANGES === 'true') {
              message += '- üîß **Composer dependencies changed** - May affect existing installations\n';
            }

            if (process.env.CONFIG_CHANGES === 'true') {
              message += '- ‚öôÔ∏è **Configuration files changed** - May require environment updates\n';
            }

            message += '\nPlease review these changes carefully and update documentation if needed.';

            await github.rest.issues.createComment({
              owner,
              repo,
              issue_number: number,
              body: message
            });
