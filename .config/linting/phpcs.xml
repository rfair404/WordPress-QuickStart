<?xml version="1.0"?>
<ruleset name="WordPress Quickstart">
    <description>Custom coding standards for WordPress Quickstart project with VIP-Go standards</description>

    <!-- Show progress and sniff codes in all reports -->
    <arg value="ps"/>

    <!-- Check up to 8 files simultaneously -->
    <arg name="parallel" value="8"/>

    <!-- Only check PHP files -->
    <arg name="extensions" value="php"/>

    <!-- Exclude common directories -->
    <exclude-pattern>*/vendor/*</exclude-pattern>
    <exclude-pattern>*/node_modules/*</exclude-pattern>
    <exclude-pattern>*/wp/*</exclude-pattern>
    <exclude-pattern>*/wp-content/uploads/*</exclude-pattern>
    <exclude-pattern>*/wp-config.php</exclude-pattern>
    <exclude-pattern>*/coverage/*</exclude-pattern>
    <exclude-pattern>*/build/*</exclude-pattern>
    <exclude-pattern>*/dist/*</exclude-pattern>
    <exclude-pattern>*/custom/uploads/*</exclude-pattern>
    <!-- Exclude third-party plugins and themes that don't follow project naming conventions -->
    <!-- (WooCommerce and default themes removed in Phase 2 - add future third-party code here) -->

    <!-- Include the WordPress VIP Coding Standards -->
    <rule ref="WordPress-VIP-Go">
        <!-- Allow for theme/plugin specific exceptions -->
        <exclude name="WordPress.Files.FileName.InvalidClassFileName"/>
        <exclude name="WordPress.Files.FileName.NotHyphenatedLowercase"/>
    </rule>

    <!-- PHP compatibility check for WordPress supported versions -->
    <!-- 
    PHPCompatibilityWP rule disabled due to internal library incompatibility with PHP 8.1.
    The PHPCompatibility library v9.3.5 (from 2019) has internal code that throws 
    "trim(): Passing null to parameter #1" errors on PHP 8.1+.
    Since this project targets PHP 8.1+ and WordPress provides its own polyfills,
    this check is not critical for our use case.
    -->
    <!--
    <rule ref="PHPCompatibilityWP">
        <config name="testVersion" value="8.1-"/>
    </rule>
    -->

    <!-- Variable Analysis for unused variables -->
    <rule ref="VariableAnalysis"/>

    <!-- Custom rules specific to this project -->
    <rule ref="WordPress.WP.I18n">
        <properties>
            <property name="text_domain" type="array">
                <element value="wordpress-quickstart"/>
            </property>
        </properties>
    </rule>

    <!-- Allow for theme/plugin specific exceptions -->
    <rule ref="WordPress.Files.FileName">
        <exclude-pattern>*/tests/*</exclude-pattern>
    </rule>

    <!-- Relax some strict rules for development -->
    <rule ref="WordPress.PHP.YodaConditions.NotYoda">
        <severity>3</severity>
    </rule>

    <!-- Set minimum supported WordPress version -->
    <config name="minimum_supported_wp_version" value="6.0"/>

    <!-- Check that the proper text domain is used -->
    <rule ref="WordPress.WP.I18n.MissingTranslatorsComment">
        <type>warning</type>
    </rule>

    <!-- Verify that everything in the global namespace is prefixed -->
    <rule ref="WordPress.NamingConventions.PrefixAllGlobals">
        <properties>
            <property name="prefixes" type="array">
                <element value="wqs_"/>
                <element value="WQS_"/>
                <element value="WordPressQuickstart"/>
            </property>
        </properties>
        <exclude-pattern>*/tests/*</exclude-pattern>
    </rule>

    <!-- Modern PHP practices -->
    <rule ref="Universal.Operators.StrictComparisons"/>
</ruleset>
